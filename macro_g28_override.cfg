## https://github.com/vladbabii/klipper.macro.g28_override
##
## Homing override v.3
##
## 0 - not homed
## 1 - real homed
## 2 - fake home
[gcode_macro HOMING_STATUS]
variable_x: 0
variable_y: 0
variable_z: 0
#not-supported# variable_e: 0
gcode:
  #RESPOND PREFIX="info" MSG="Homing status: 0=not homed, 1=real homed, 2=fake home"
  #RESPOND PREFIX="info" MSG=" X: {printer['gcode_macro HOMING_STATUS'].x}"
  #RESPOND PREFIX="info" MSG=" Y: {printer['gcode_macro HOMING_STATUS'].y}"
  #RESPOND PREFIX="info" MSG=" Z: {printer['gcode_macro HOMING_STATUS'].z}"
  #not-supported#  RESPOND PREFIX="info" MSG=" E: {printer['gcode_macro HOMING_STATUS'].e}"
  
[gcode_macro M84]
rename_existing: G990084
gcode:
  #RESPOND PREFIX="info" MSG="Disable Steppers > Marking as not homed..."
  SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=x VALUE=0
  SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=y VALUE=0
  SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=z VALUE=0
  #not-supported# SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=e VALUE=0
  G990084
  RESPOND PREFIX="info" MSG="Disable Steppers > Steppers disabled"
  
[gcode_macro M18]
rename_existing: G990018
gcode:
  RESPOND PREFIX="info" MSG="Disable Steppers > ..."
  SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=x VALUE=0
  SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=y VALUE=0
  SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=z VALUE=0
  #not-supported# SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=e VALUE=0
  G990018

[gcode_macro SET_KINEMATIC_POSITION]
rename_existing: REAL_SET_KINEMATIC_POSITION
gcode:
  {% if params.X is defined %}
    #RESPOND PREFIX="info" MSG="SET_KINEMATIC_POSITION > X={params.X}"
    REAL_SET_KINEMATIC_POSITION X={params.X}
    SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=x VALUE=2
  {% endif %}
  
  {% if params.Y is defined %}
    #RESPOND PREFIX="info" MSG="SET_KINEMATIC_POSITION > Y={params.Y}"
    REAL_SET_KINEMATIC_POSITION Y={params.Y}
    SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=y VALUE=2
  {% endif %}
  
  {% if params.Z is defined %}
    #RESPOND PREFIX="info" MSG="SET_KINEMATIC_POSITION > Z={params.Z}"
    REAL_SET_KINEMATIC_POSITION Z={params.Z}
    SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=z VALUE=2
  {% endif %}

[gcode_macro HOMING_NOW]
variable_do_x: 0
variable_do_y: 0
variable_do_z: 0
gcode:
  #RESPOND PREFIX="info" MSG="Homing > Nothing to see here"

[gcode_macro G28]
rename_existing: G990028
gcode:
  SET_GCODE_VARIABLE MACRO=HOMING_NOW VARIABLE=do_x VALUE=0
  SET_GCODE_VARIABLE MACRO=HOMING_NOW VARIABLE=do_y VALUE=0
  SET_GCODE_VARIABLE MACRO=HOMING_NOW VARIABLE=do_z VALUE=0
  
  {% set status_x = printer['gcode_macro HOMING_STATUS'].x|int %}
  {% set status_y = printer['gcode_macro HOMING_STATUS'].y|int %}
  {% set status_z = printer['gcode_macro HOMING_STATUS'].z|int %}

  {% set axis = printer['gcode_macro HOMING_CONFIG'].order.split(',') %}
  
  {% for i in axis %}
    {% set i = i|upper %}
    # RESPOND PREFIX="info" MSG="Home > Checking {i}"
    
    {% if i=="X" %}
       {% if params.X is defined %}
        #RESPOND PREFIX="info" MSG="Home > X is defined - {params.X}"
        {% if params.X|string=="0" and status_x==1 %}
          #RESPOND PREFIX="info" MSG="Home > Skipping X (already homed)"
        {% else %}
          #RESPOND PREFIX="info" MSG="Home > Homing X"
          SET_GCODE_VARIABLE MACRO=HOMING_NOW VARIABLE=do_x VALUE=1
        {% endif %}
      {%else%}
        #RESPOND PREFIX="info" MSG="Home > X is NOT defined"
      {% endif %}
    {% endif %}

    {% if i=="Y" %}
      {% if params.Y is defined %}
        #RESPOND PREFIX="info" MSG="Home > Y is defined - {params.Y}"
        {% if params.Y|string=="0" and status_y==1 %}
          #RESPOND PREFIX="info" MSG="Home > Skipping Y (already homed)"
        {% else %}
          #RESPOND PREFIX="info" MSG="Home > Homing Y"
          SET_GCODE_VARIABLE MACRO=HOMING_NOW VARIABLE=do_y VALUE=1
        {% endif %}
      {% else %}
        #RESPOND PREFIX="info" MSG="Home > Y is NOT defined"
      {% endif %}
    {% endif %}

    {% if i=="Z" %}
      {% if params.Z is defined %}
        #RESPOND PREFIX="info" MSG="Home > Z is defined - {params.Z}"
        {% if params.Z|string=="0" and status_z==1 %}
          #RESPOND PREFIX="info" MSG="Home > Skipping Z (already homed)"
        {% else %}
          #RESPOND PREFIX="info" MSG="Home > Homing Z"
          SET_GCODE_VARIABLE MACRO=HOMING_NOW VARIABLE=do_z VALUE=1
        {% endif %}
      {% else %}  
        #RESPOND PREFIX="info" MSG="Home > Z is NOT defined"
      {% endif %}
    {% endif %}

  {% endfor %}

  {% if ( params.X is not defined ) and ( params.Y is not defined ) and ( params.Z is not defined ) %}
    #RESPOND PREFIX="info" MSG="Home > No parameters for home given, doing all configured axis {printer['gcode_macro HOMING_CONFIG'].order}"
    SET_GCODE_VARIABLE MACRO=HOMING_NOW VARIABLE=do_x VALUE=1
    SET_GCODE_VARIABLE MACRO=HOMING_NOW VARIABLE=do_y VALUE=1
    SET_GCODE_VARIABLE MACRO=HOMING_NOW VARIABLE=do_z VALUE=1 
  {% endif %}

  G28002


[gcode_macro G28002]
gcode:
  {% set axis = printer['gcode_macro HOMING_CONFIG'].order.split(',') %}
  ## check do_width
  {% for i in axis %}
    {% set i = i|upper %}
    #RESPOND PREFIX="info" MSG="Home > Checking dependency for {i} {do_x} {do_y} {do_z}"
    
    {% if i=="X" and printer['gcode_macro HOMING_NOW'].do_x|int==1 %}
      {% if printer['gcode_macro HOMING_CONFIG'].dowith_x is defined %}
        #RESPOND PREFIX="info" MSG="Home > Checking dependency dowith X"
        {% set list = printer['gcode_macro HOMING_CONFIG'].dowith_x.split(',') %}
        {% for j in list %}
          #RESPOND PREFIX="info" MSG="Home > Checking dependency > {j}" 
          {% if (j|upper=="Y" and printer['gcode_macro HOMING_NOW'].do_y|int==0) %}
            SET_GCODE_VARIABLE MACRO=HOMING_NOW VARIABLE=do_y VALUE=1
            #RESPOND PREFIX="info" MSG="Home > Also homing {j|upper} due to dependency from {i}"
          {%endif%}
          {% if (j|upper=="Z" and printer['gcode_macro HOMING_NOW'].do_z|int==0) %}
            SET_GCODE_VARIABLE MACRO=HOMING_NOW VARIABLE=do_z VALUE=1
            #RESPOND PREFIX="info" MSG="Home > Also homing {j|upper} due to dependency from {i}"
          {%endif%}
        {% endfor %}
      {%endif%}
    {%endif%}

    {% if i=="Y" and printer['gcode_macro HOMING_NOW'].do_y|int==1 %}
      {% if printer['gcode_macro HOMING_CONFIG'].dowith_y is defined %}
        #RESPOND PREFIX="info" MSG="Home > Checking dependency dowith Y"
        {% set list = printer['gcode_macro HOMING_CONFIG'].dowith_y.split(',') %}
        {% for j in list %}
          #RESPOND PREFIX="info" MSG="Home > Checking dependency > {j}" 
          {% if (j|upper=="X" and printer['gcode_macro HOMING_NOW'].do_x|int==0) %}
            SET_GCODE_VARIABLE MACRO=HOMING_NOW VARIABLE=do_x VALUE=1
            #RESPOND PREFIX="info" MSG="Home > Also homing {j|upper} due to dependency from {i}"
          {%endif%}
          {% if (j|upper=="Z" and printer['gcode_macro HOMING_NOW'].do_z|int==0) %}
            SET_GCODE_VARIABLE MACRO=HOMING_NOW VARIABLE=do_z VALUE=1
            #RESPOND PREFIX="info" MSG="Home > Also homing {j|upper} due to dependency from {i}"
          {%endif%}
        {% endfor %}
      {%endif%}
    {%endif%}

    {% if i=="Z" and printer['gcode_macro HOMING_NOW'].do_z|int==1 %}
      {% if printer['gcode_macro HOMING_CONFIG'].dowith_z is defined %}
        #RESPOND PREFIX="info" MSG="Home > Checking dependency dowith Z"
        {% set list = printer['gcode_macro HOMING_CONFIG'].dowith_z.split(',') %}
        {% for j in list %}
          #RESPOND PREFIX="info" MSG="Home > Checking dependency > {j}" 
          {% if (j|upper=="Y" and printer['gcode_macro HOMING_NOW'].do_y|int==0) %}
            SET_GCODE_VARIABLE MACRO=HOMING_NOW VARIABLE=do_y VALUE=1
            #RESPOND PREFIX="info" MSG="Home > Also homing {j|upper} due to dependency from {i}"
          {%endif%}
          {% if (j|upper=="X" and printer['gcode_macro HOMING_NOW'].do_x|int==0) %}
            SET_GCODE_VARIABLE MACRO=HOMING_NOW VARIABLE=do_x VALUE=1
            #RESPOND PREFIX="info" MSG="Home > Also homing {j|upper} due to dependency from {i}"
          {%endif%}
        {% endfor %}
      {%endif%}
    {%endif%}

  {%endfor%}

  G28003


[gcode_macro G28003]
gcode:
  ## show in console what will be homed
  {% if printer['gcode_macro HOMING_NOW'].do_x|int==0 and printer['gcode_macro HOMING_NOW'].do_y|int==0 and printer['gcode_macro HOMING_NOW'].do_z|int==0 %}

     #RESPOND PREFIX="info" MSG="Home > Nothing to home, all requested axis are already homed"

  {% else %}
    {% set axis = printer['gcode_macro HOMING_CONFIG'].order.split(',') %}
   
    {% for i in axis %}
      {% set i = i|upper %}
      {% if i=="X" and printer['gcode_macro HOMING_NOW'].do_x|int==1 %}
        #RESPOND PREFIX="info" MSG="Home > Todo: {i}"
      {%endif%}
      {% if i=="Y" and printer['gcode_macro HOMING_NOW'].do_y|int==1 %}
        #RESPOND PREFIX="info" MSG="Home > Todo: {i}"
      {%endif%}
      {% if i=="Z" and printer['gcode_macro HOMING_NOW'].do_z|int==1 %}
        #RESPOND PREFIX="info" MSG="Home > Todo: {i}"
      {%endif%}
    {%endfor%}

    G28004

  {% endif %}


[gcode_macro G28004]
gcode:
  ## precheck if homing is defined - abort with m112 
  {% set axis = printer['gcode_macro HOMING_CONFIG'].order.split(',') %}
  
  {% for i in axis %}
    {% set i = i|upper %}
    
    {% if i=="X" and printer['gcode_macro HOMING_NOW'].do_x|int==1 %}
      {% if printer['gcode_macro HOMING_OVERRIDE_X'] is not defined and printer['gcode_macro HOMING_DEFAULT_X'] is not defined %}
        #RESPOND PREFIX="error" MSG="Home > {i} > Uknown axis method"
        M112
      {%endif%}
    {%endif%}

    {% if i=="Y" and printer['gcode_macro HOMING_NOW'].do_y|int==1 %}
      {% if printer['gcode_macro HOMING_OVERRIDE_Y'] is not defined and printer['gcode_macro HOMING_DEFAULT_Y'] is not defined %}
        #RESPOND PREFIX="error" MSG="Home > {i} > Uknown axis method"
        M112
      {%endif%}
    {%endif%}

    {% if i=="Z" and printer['gcode_macro HOMING_NOW'].do_z|int==1 %}
      {% if printer['gcode_macro HOMING_OVERRIDE_Z'] is not defined and printer['gcode_macro HOMING_DEFAULT_Z'] is defined %}
        #RESPOND PREFIX="error" MSG="Home > {i} > Uknown axis method"
        M112
      {%endif%}
    {%endif%}
  {%endfor%}

  G28005

[gcode_macro G28005]
gcode:
  {% set axis = printer['gcode_macro HOMING_CONFIG'].order.split(',') %}
  
  {% if printer['gcode_macro HOMING_OVERRIDE_BEFORE'] is defined %}
    HOMING_OVERRIDE_BEFORE X={printer['gcode_macro HOMING_NOW'].do_x|int} Y={printer['gcode_macro HOMING_NOW'].do_y|int} Z={printer['gcode_macro HOMING_NOW'].do_z}
  {% else %}

    ## z hop first
    {% if printer['gcode_macro HOMING_NOW'].do_x|int==1 or printer['gcode_macro HOMING_NOW'].do_y|int==1 or printer['gcode_macro HOMING_NOW'].do_z|int==1 %}
      {% if printer['gcode_macro HOMING_OVERRIDE_ZHOP'] is defined %}
          HOMING_OVERRIDE_ZHOP
      {%endif%}
      {% if printer['gcode_macro HOMING_CONFIG'].start_zhop is defined and printer['gcode_macro HOMING_CONFIG'].start_zhop|int>0 %}
        {% if printer['gcode_macro HOMING_STATUS'].z|int != 1 %}
          #RESPOND PREFIX="info" MSG="Home > Fake homing Z so it can move down prior to homing"
          REAL_SET_KINEMATIC_POSITION Z=0
               ## {printer['gcode_macro HOMING_CONFIG'].start_zhop|int}
        {% endif %}
        #RESPOND PREFIX="info" MSG="Home > Moving up {printer['gcode_macro HOMING_CONFIG'].start_zhop} mm before homing"
        G91
        G0 Z{printer['gcode_macro HOMING_CONFIG'].start_zhop|int}
        G90
      {% endif %}
    {% endif %}
  
  {% endif %}

  ## actual homing
  {% for i in axis %}
    {% set i = i|upper %}
    
    {% if i=="X" and printer['gcode_macro HOMING_NOW'].do_x|int==1 %}
      {% if printer['gcode_macro HOMING_OVERRIDE_X'] is defined %}
        #RESPOND PREFIX="info" MSG="Home > {i} > Homing Override"
        HOMING_OVERRIDE_X
        SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=x VALUE=1
      {% elif printer['gcode_macro HOMING_DEFAULT_X'] is defined %}
        #RESPOND PREFIX="info" MSG="Home > {i} > Homing Default"
        HOMING_DEFAULT_X
        SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=x VALUE=1
      {%endif%}
    {%endif%}

    {% if i=="Y" and printer['gcode_macro HOMING_NOW'].do_y|int==1 %}
      {% if printer['gcode_macro HOMING_OVERRIDE_Y'] is defined %}
        #RESPOND PREFIX="info" MSG="Home > {i} > Homing Override"
        HOMING_OVERRIDE_Y
        SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=y VALUE=1
      {% elif printer['gcode_macro HOMING_DEFAULT_Y'] is defined %}
        #RESPOND PREFIX="info" MSG="Home > {i} > Homing Default"
        HOMING_DEFAULT_Y
        SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=y VALUE=1
      {%endif%}
    {%endif%}

    {% if i=="Z" and printer['gcode_macro HOMING_NOW'].do_z|int==1 %}
      {% if printer['gcode_macro HOMING_OVERRIDE_Z'] is defined %}
        #RESPOND PREFIX="info" MSG="Home > {i} > Homing Override"
        HOMING_OVERRIDE_Z
        SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=z VALUE=1
      {% elif printer['gcode_macro HOMING_DEFAULT_Z'] is defined %}
        #RESPOND PREFIX="info" MSG="Home > {i} > Homing Default"
        HOMING_DEFAULT_Z
        SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=z VALUE=1
      {%endif%}
    {%endif%}
  
  {%endfor%}

  {% if printer['gcode_macro HOMING_OVERRIDE_AFTER'] is defined %}
    HOMING_OVERRIDE_AFTER X={printer['gcode_macro HOMING_NOW'].do_x|int} Y={printer['gcode_macro HOMING_NOW'].do_y|int} Z={printer['gcode_macro HOMING_NOW'].do_z}
  {%endif%}
    

[gcode_macro HOMING_DEFAULT_X]
gcode:
  G990028 X

[gcode_macro HOMING_DEFAULT_Y]
gcode:
  G990028 Y

[gcode_macro HOMING_DEFAULT_Z]
gcode:
  G990028 Z

 
